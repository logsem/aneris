(* This file is automatically generated from the OCaml source file
<repository_root>/ml_sources/examples/reliable_communication/examples/dlm_db_example/dlm_db_example_code.ml *)

From aneris.aneris_lang Require Import ast.
From aneris.aneris_lang.lib.serialization Require Import serialization_code.
From aneris.examples.reliable_communication.lib.dlm Require Import dlm_code.
From aneris.examples.reliable_communication.lib.repdb Require Import repdb_code.

Definition do_writes : val :=
  位: "lk" "wr",
  dlock_acquire "lk";;
  "wr" #"x" #37;;
  "wr" #"y" #1;;
  dlock_release "lk".

Definition do_reads : val :=
  位: "lk" "rd",
  letrec: "loop" <> :=
    dlock_acquire "lk";;
    let: "vx" := "rd" #"x" in
    (if: "vx" = (SOME #37)
     then
       let: "vy" := "rd" #"y" in
       assert: ("vy" = (SOME #1));;
       dlock_release "lk";;
       "vy"
     else
       dlock_release "lk";;
       #() (* unsafe (fun () -> Unix.sleepf 2.0); *);;
       "loop" #()) in
    "loop" #().

Definition node0 : val :=
  位: "clt_addr00" "clt_addr01" "dl_addr" "db_laddr",
  let: "lk_chan" := dlock_subscribe_client "clt_addr00" "dl_addr" in
  let: "db_funs" := init_client_leader_proxy int_serializer "clt_addr01"
                    "db_laddr" in
  let: "wr" := Fst "db_funs" in
  let: "_rd" := Snd "db_funs" in
  do_writes "lk_chan" "wr".

Definition node1 : val :=
  位: "clt_addr10" "clt_addr11" "dl_addr" "db_laddr",
  let: "lk_chan" := dlock_subscribe_client "clt_addr10" "dl_addr" in
  let: "db_funs" := init_client_leader_proxy int_serializer "clt_addr11"
                    "db_laddr" in
  let: "_wr" := Fst "db_funs" in
  let: "rd" := Snd "db_funs" in
  do_reads "lk_chan" "rd".
