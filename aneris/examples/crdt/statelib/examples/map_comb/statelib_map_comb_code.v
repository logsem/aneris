(* This file is automatically generated from the OCaml source file
<repository_root>/ml_sources/examples/crdt/statelib/examples/map_comb/statelib_map_comb_code.ml *)

From aneris.aneris_lang Require Import ast.
From aneris.aneris_lang.lib.serialization Require Import serialization_code.
From aneris.aneris_lang.lib Require Import set_code.
From aneris.aneris_lang.lib Require Import map_code.
From aneris.aneris_lang.lib Require Import list_code.
From aneris.examples.crdt.statelib Require Import statelib_code.

Definition map_comb_init_st : val := λ: <>, map_empty #().

Definition map_comb_mutator : val :=
  λ: "init_st_fn" "mut_fn" "i" "st" "op",
  let: "k" := Fst "op" in
  let: "k_op" := Snd "op" in
  let: "k_st'" := match: map_lookup "k" "st" with
    NONE => "mut_fn" "i" ("init_st_fn" #()) "k_op"
  | SOME "k_st" => "mut_fn" "i" "k_st" "k_op"
  end in
  map_insert "k" "k_st'" "st".

Definition map_comb_merge : val :=
  λ: "merge_fn" "st0" "st1",
  let: "dom0" := map_dom "st0" in
  let: "dom1" := map_dom "st1" in
  let: "dom" := set_union "dom0" "dom1" in
  let: "merge_aux" := λ: "m" "k",
  match: map_lookup "k" "st0" with
    NONE =>
    match: map_lookup "k" "st1" with
      NONE => assert: #false
    | SOME "v1" => map_insert "k" "v1" "m"
    end
  | SOME "v0" =>
      match: map_lookup "k" "st1" with
        NONE => map_insert "k" "v0" "m"
      | SOME "v1" => map_insert "k" ("merge_fn" "v0" "v1") "m"
      end
  end in
  set_foldl "merge_aux" (map_empty #()) "dom".

Definition map_comb_crdt (cA : val) : val :=
  λ: <>,
  let: "cAp" := cA #() in
  let: "init_fnA" := Fst (Fst "cAp") in
  let: "mut_fnA" := Snd (Fst "cAp") in
  let: "merge_fnA" := Snd "cAp" in
  let: "mut_fn" := λ: "i" "gs" "op",
  map_comb_mutator "init_fnA" "mut_fnA" "i" "gs" "op" in
  let: "merge_fn" := λ: "st1" "st2",
  map_comb_merge "merge_fnA" "st1" "st2" in
  (map_comb_init_st, "mut_fn", "merge_fn").

Definition string_map_ser (stA_ser : val) :=
  list_ser (prod_ser string_ser stA_ser).

Definition string_map_deser (stA_deser : val) :=
  list_deser (prod_deser string_deser stA_deser).

Definition map_comb_init (stA_ser : val) (stA_deser : val) (cA : val) : val :=
  λ: "addrs" "rid",
  let: "initRes" := statelib_init (string_map_ser stA_ser)
                    (string_map_deser stA_deser) "addrs" "rid"
                    (λ: <>, map_comb_crdt cA #()) in
  let: "get_state" := Fst "initRes" in
  let: "update" := Snd "initRes" in
  ("get_state", "update").
