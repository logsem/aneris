(* This file is automatically generated from the OCaml source file
<repository_root>/ml_sources/examples/viewstamped_replication/vr_client_proxy_code.ml *)

From aneris.aneris_lang Require Import ast.
From aneris.aneris_lang.lib Require Import list_code.
From aneris.aneris_lang.lib Require Import network_util_code.
From aneris.examples.viewstamped_replication Require Import vr_serialization_code.

Definition wait_for_reply val_ser : val :=
  λ: "len" "saddrl" "sh" "reqId" "prmId" "reqMsg",
  let: "rid" := ! "reqId" in
  letrec: "aux" <> :=
    match: ReceiveFrom "sh" with
      NONE => sendto_all_set "sh" "saddrl" "reqMsg";;
              "aux" #()
    | SOME "rply" =>
        let: "repl" := (reply_serializer val_ser).(s_deser) (Fst "rply") in
        let: "v" := Fst (Fst (Fst "repl")) in
        let: "resId" := Snd (Fst (Fst "repl")) in
        let: "res" := Snd (Fst "repl") in
        let: "_caddr" := Snd "repl" in
        assert: ("resId" ≤ "rid");;
        (if: "resId" = "rid"
         then  "prmId" <- ("v" `rem` "len");;
               "reqId" <- ("rid" + #1);;
               "res"
         else  "aux" #())
    end in
    "aux" #().

Definition make_request val_ser : val :=
  λ: "len" "saddrl" "caddr" "sh" "lock" "reqId" "prmId",
  let: "request" := λ: "req",
  acquire "lock";;
  let: "dst" := unSOME (list_nth "saddrl" ! "prmId") in
  let: "reqMsg" := (request_serializer val_ser).(s_ser) ("req", "caddr", ! "reqId") in
  SendTo "sh" "reqMsg" "dst";;
  #();;
  #() (* unsafe (fun () -> Printf.eprintf "made request: %s\n%!" (reqMsg)); *);;
  let: "r" := wait_for_reply val_ser "len" "saddrl" "sh" "reqId" "prmId"
              "reqMsg" in
  release "lock";;
  "r" in
  let: "wr" := λ: "k" "v",
  let: "_req" := "request" (InjL ("k", "v")) in
  #() in
  let: "rd" := λ: "k",
  "request" (InjR "k") in
  ("wr", "rd").

Definition install_proxy val_ser : val :=
  λ: "saddrl" "caddr",
  let: "sh" := NewSocket #() in
  let: "lock" := newlock #() in
  let: "prmId" := ref #0 in
  let: "reqId" := ref #0 in
  let: "len" := list_length "saddrl" in
  SetReceiveTimeout "sh" #3 #0;;
  SocketBind "sh" "caddr";;
  make_request val_ser "len" "saddrl" "caddr" "sh" "lock" "reqId" "prmId".
