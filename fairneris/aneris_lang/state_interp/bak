
(* Lemma gset_of_gmultiset_disj_union {A} `{Countable A} (M N : gmultiset A) : *)
(*   gset_of_gmultiset (M ⊎ N) = (gset_of_gmultiset M) ∪ (gset_of_gmultiset N). *)
(* Proof. *)
(*   apply set_eq. *)
(*   intros x. *)
(*   split; intros Hin. *)
(*   - apply elem_of_union. *)
(*     rewrite elem_of_gset_of_gmultiset in Hin. *)
(*     rewrite multiplicity_disj_union in Hin. *)
(*     rewrite !elem_of_gset_of_gmultiset.     *)
(*     destruct (multiplicity x M), (multiplicity x N); lia. *)
(*   - apply elem_of_union in Hin. *)
(*     rewrite !elem_of_gset_of_gmultiset in Hin. *)
(*     rewrite elem_of_gset_of_gmultiset.     *)
(*     rewrite multiplicity_disj_union. *)
(*     destruct (multiplicity x M), (multiplicity x N); lia. *)
(* Qed. *)

(* Lemma gset_of_gmultiset_subseteq_mono {A} `{Countable A} (M N : gmultiset A) : *)
(*   N ⊆ M → gset_of_gmultiset N ⊆ gset_of_gmultiset M. *)
(* Proof. *)
(*   intros Hle. *)
(*   intros x. rewrite !elem_of_gset_of_gmultiset. *)
(*   intros Hin. *)
(*   specialize (Hle x). *)
(*   lia. *)
(* Qed. *)

(* Lemma gset_of_gmultiset_disj_union_subseteq {A} `{Countable A} (M N : gmultiset A) : *)
(*   N ⊆ M → gset_of_gmultiset (M ⊎ N) = gset_of_gmultiset M. *)
(* Proof. *)
(*   intros Hle. *)
(*   rewrite gset_of_gmultiset_disj_union. *)
(*   apply gset_of_gmultiset_subseteq_mono in Hle. *)
(*   set_solver. *)
(* Qed. *)
